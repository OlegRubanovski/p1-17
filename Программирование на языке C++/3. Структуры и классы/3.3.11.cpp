///Задание: Конструкторов у структуры может быть несколько. Для строки может оказаться полезным заполняющий конструктор 
///(например, чтобы создать строку пробелов). Заполняющий конструктор принимает число и символ, 
///и создает строку с заданным количеством повторений переданного символа. 
///Условия налагаемые на реализацию конструктора те же самые (в поле size размер без учета завершающего 0 символа, 
///в поле str C-style строка, т.е. с завершающим 0 символом). Кроме конструктора в этой задаче вам нужно также реализовать и деструктор, 
///который освободит выделенную память. Требования к решению: в этом задании не нужно вводить или выводить что-либо, 
///не нужно реализовывать функцию main. Для работы с памятью не используйте функции из cstdlib (malloc, calloc, realloc и free).
///Источник: Stepic Программирование на языке C++ https://stepik.org/7 от Computer Science Center(CS центр) 
///Глава 3, раздел 3, шаг 11. https://stepik.org/lesson/546/step/11
///Выполнил: Юшаков Н. Р. 23.04.2020.
#include <cstddef> // size_t
#include <cstring> // strlen, strcpy

struct String {

    /* Ðåàëèçóéòå ýòîò êîíñòðóêòîð */
	String(size_t n, char c) : size(n), str(new char[n + 1]) {
        for (size_t i = 0; i != n; str[i] = c, ++i)
            ;
        str[n] = '\0';
    }

    /* è äåñòðóêòîð */
	~String() {
        delete [] str;
    }


	size_t size;
	char *str;
};
