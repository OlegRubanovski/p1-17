///Задание: Вам дан класс Foo. Как видно, создатель класса не хотел чтобы его использовали и "спрятал" конструктор класса. 
///Но вам очень нужен объект этого класса, чтобы передать его в функцию foo_says
///В этом задании вам нужно реализовать функцию get_foo (сигнатура которой намерено не приводится в задании полностью, 
///вам нужно подумать и вывести ее самостоятельно) так, чтобы следующий код компилировался и работал:

///foo_says(get_foo(msg));

///Где msg — произвольная C-style строка.
///Требования к реализации: при выполнении задания вам разрешено вводить любые вспомогательные функции и классы. 
///Запрещено изменять определение класса Foo или функции foo_says. Вводить или выводить что-либо не нужно. 
///Реализовывать функцию main не нужно.
///Источник: Stepic Программирование на языке C++ https://stepik.org/7 от Computer Science Center(CS центр) 
///Глава 4, раздел 1, шаг 9. https://stepik.org/lesson/552/step/9
///Выполнил: Юшаков Н. Р. 24.04.2020.
/* Ýòîò êîä ïðîñòî íàïîìèíàíèå êàê âûãëÿäèò êëàññ Foo è ôóíêöèÿ foo_says.
 * Íå íóæíî åãî ðàññêîìåíòèðîâàòü è/èëè ìåíÿòü.
 *
 * #include <iostream>
 *
 * struct Foo {
 *     void say() const { std::cout << "Foo says: " << msg << "\n"; }
 * protected:
 *     Foo(const char *msg) : msg(msg) { }
 * private:
 *     const char *msg;
 * };
 *
 * void foo_says(const Foo &foo) { foo.say(); }
 *
 */

// Âàì íóæíî îïðåäåëèòü ôóíêöèþ get_foo, êàê îïèñàíî â çàäàíèè,
// ÷òîáû êîìïèëèðîâàëñÿ è ðàáîòàë êàê îæèäàåòñÿ ñëåäóþùèé êîä:
//
// foo_says(get_foo("Hello!"));

struct I_will_get_you : Foo {
    I_will_get_you(const char *msg) : Foo(msg)
    {}
};
struct I_will_get_you get_foo(const char *msg) {
    I_will_get_you a(msg);
    return a;
}
